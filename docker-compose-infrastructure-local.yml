version: '3.8'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    environment:
      ZOO_MY_ID: 1

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    networks:
      - kafka-network
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - ./:/var/run/docker.sock

  postgres:
    container_name: postgres
    image: postgres:12.3-alpine
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=transaction
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - db-network

  oracle:
    container_name: oracle
    image: daggerok/oracle:12.1.0.2-se
    shm_size: 1g
    environment:
      ORACLE_SID: DBBPAGO
      ORACLE_PWD: password
      ORACLE_PDB: DBBPAGO
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - 1521:1521
      - 5500:5500
    volumes:
      - "oracle-se-data:/opt/oracle/oradata"
      - "./db-startup-migration-scripts:/opt/oracle/scripts/startup"
      - "./db-setup-migration-scripts:/docker-entrypoint-initdb.d/setup"
    networks:
      - db-network

volumes:
  postgres:
  oracle-se-data: {}

networks:
  db-network:
    external:
      name: db-network
  kafka-network:
    external:
      name: kafka-network
